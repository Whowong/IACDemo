# Starter pipeline


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    branches:
        include:
            - main
pr:
   branches:
     include:
       - branch/*
       - main
    
pool:
  vmImage: ubuntu-latest

steps:

  - task: TerraformInstaller@0
    inputs:
      terraformVersion: '1.0.1'

  - task: TerraformTaskV2@2
    name: "TerraformInit"
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: 'AH_CSA_SWARM_MA2 (6e905154-269f-4db5-b367-01288088e6f3)'
      backendAzureRmResourceGroupName: 'AH_SharedServices'
      backendAzureRmStorageAccountName: 'ahcsaterraform'
      backendAzureRmContainerName: 'terraform'
      backendAzureRmKey: 'multiplevms.tfstate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform/MultipleVMs'

  - task: TerraformTaskV2@2
    name: "TerraformValidate"
    inputs:
      provider: 'azurerm'
      command: 'validate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform/MultipleVMs'
  - task: PublishPipelineArtifact@1
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    inputs:
      targetPath: '$(Pipeline.Workspace)'
      artifact: 'Artifact'
      publishLocation: 'pipeline'